FUNCTION_BLOCK tipper	

// Define input variables
VAR_INPUT				
	count_cars : REAL;
	//second_road : REAL;
    travel_time : REAL;
    priority_in1 : REAL;
    priority_in2 : REAL;
END_VAR

// Define output variable
VAR_OUTPUT				
	time : REAL;
    priority_out : REAL;
END_VAR

FUZZIFY count_cars			
	TERM zero := sigm -1 3;
	TERM small := gauss 5 3;
	TERM medium := gauss 10 3;
	TERM large := sigm 1 12;
END_FUZZIFY

FUZZIFY travel_time			
	TERM low := sigm -0.1 100;
	TERM medium := gauss 250 100;
	TERM high := sigm 0.05 400;
END_FUZZIFY

DEFUZZIFY time	
	TERM dec := sigm -1 -4;
	TERM declow := gauss -3 2;
	TERM zero := gauss 0 2;
	TERM inclow := gauss 3 2;
	TERM inc := sigm 1 4;
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY priority_in1	
	TERM low := sigm -2 2;
	TERM medium := gauss 3.5 1.5;
	TERM high := gauss 6.5 1.5;
	TERM veryhigh := sigm 2 8;
END_DEFUZZIFY
DEFUZZIFY priority_in2	
	TERM low := sigm -2 2;
	TERM medium := gauss 3.5 1.5;
	TERM high := gauss 6.5 1.5;
	TERM veryhigh := sigm 2 8;
END_DEFUZZIFY
DEFUZZIFY priority_out	
	TERM low := sigm -2 2;
	TERM medium := gauss 3.5 1.5;
	TERM high := gauss 6.5 1.5;
	TERM veryhigh := sigm 2 8;
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

    RULE 1 : IF count_cars IS zero AND travel_time IS medium THEN priority_out IS low;
    RULE 2 : IF count_cars IS small AND travel_time IS medium THEN priority_out IS medium;
    RULE 3 : IF count_cars IS medium AND travel_time IS medium THEN priority_out IS medium;
    RULE 4 : IF count_cars IS large AND travel_time IS medium THEN priority_out IS high;
    RULE 5 : IF count_cars IS zero AND travel_time IS high THEN priority_out IS high;
    RULE 6 : IF count_cars IS small AND travel_time IS high THEN priority_out IS high;
    RULE 7 : IF count_cars IS medium AND travel_time IS high THEN priority_out IS veryhigh;
    RULE 8 : IF count_cars IS large AND travel_time IS high THEN priority_out IS veryhigh;
    RULE 9 : IF count_cars IS zero AND travel_time IS low THEN priority_out IS low;
    RULE 10 : IF count_cars IS small AND travel_time IS low THEN priority_out IS low;
    RULE 11 : IF count_cars IS medium AND travel_time IS low THEN priority_out IS medium;
    RULE 12 : IF count_cars IS large AND travel_time IS low THEN priority_out IS medium;    
END_RULEBLOCK

RULEBLOCK No2
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

    RULE 1 : IF priority_in1 IS low AND priority_in2 IS low THEN time IS dec;
    RULE 2 : IF priority_in1 IS low AND priority_in2 IS medium THEN time IS dec;
    RULE 3 : IF priority_in1 IS low AND priority_in2 IS high THEN time IS declow;
    RULE 4 : IF priority_in1 IS low AND priority_in2 IS veryhigh THEN time IS inc;
   
    RULE 5 : IF priority_in1 IS medium AND priority_in2 IS low THEN time IS dec;
    RULE 6 : IF priority_in1 IS medium AND priority_in2 IS medium THEN time IS declow;
    RULE 7 : IF priority_in1 IS medium AND priority_in2 IS high THEN time IS zero;
    RULE 8 : IF priority_in1 IS medium AND priority_in2 IS veryhigh THEN time IS inc;
  
    RULE 9 : IF priority_in1 IS high AND priority_in2 IS low THEN time IS zero;
    RULE 10 : IF priority_in1 IS high AND priority_in2 IS medium THEN time IS inclow;
    RULE 11 : IF priority_in1 IS high AND priority_in2 IS high THEN time IS inclow;
    RULE 12 : IF priority_in1 IS high AND priority_in2 IS veryhigh THEN time IS inc;
  
    RULE 13 : IF priority_in1 IS veryhigh AND priority_in2 IS low THEN time IS inclow;
    RULE 14 : IF priority_in1 IS veryhigh AND priority_in2 IS medium THEN time IS inc;
    RULE 15 : IF priority_in1 IS veryhigh AND priority_in2 IS high THEN time IS inc;
    RULE 16 : IF priority_in1 IS veryhigh AND priority_in2 IS veryhigh THEN time IS inc;
END_RULEBLOCK

END_FUNCTION_BLOCK